/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 book.glb --types --transform --shadows 
Files: book.glb [3.88MB] > /Users/Carsten.Hoyer/Workspace/glyptoteket/public/book-transformed.glb [364.14KB] (91%)
Author: Pixel (https://sketchfab.com/stefan.lengyel1)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/medieval-fantasy-book-06d5a80a04fc4c5ab552759e9a97d91a
Title: Medieval Fantasy Book
*/
// @ts-nocheck
import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["0"]: THREE.Mesh;
    ["1"]: THREE.Mesh;
    ["Mill-wind-wheel_Texture-base_0"]: THREE.Mesh;
    ["Mill-water-wheel_Texture-base_0"]: THREE.Mesh;
    ["Scene_Texture-base_0"]: THREE.Mesh;
    ["Scene_Texture-base-gloss-jpg_0"]: THREE.Mesh;
    ["Scene_Book-tittle_0"]: THREE.Mesh;
  };
  materials: {
    ["Texture-base"]: THREE.MeshStandardMaterial;
    ["Texture-base-gloss-jpg"]: THREE.MeshStandardMaterial;
    ["Book-tittle"]: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ActionName = "The Life";
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}
type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/book-transformed.glb"
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions["The Life"]?.play();
  }, []);

  return (
    <group ref={group} {...props} dispose={null} scale={[0.5, 0.5, 0.5]}>
      <group name="Sketchfab_Scene">
        {/* <group name="RootNode">
          <group
            name="flag"
            position={[-11.513, 12.497, -6.752]}
            rotation={[-Math.PI / 2, 0, -Math.PI / 6]}
          >
            <group name="Object_17" position={[-7.262, 9.035, -8.16]}>
              <mesh
                name="0"
                castShadow
                receiveShadow
                geometry={nodes["0"].geometry}
                material={materials["Texture-base"]}
                morphTargetDictionary={nodes["0"].morphTargetDictionary}
                morphTargetInfluences={nodes["0"].morphTargetInfluences}
              />
            </group>
          </group>
          <group
            name="flag-second"
            position={[-11.494, 12.552, -26.245]}
            rotation={[-Math.PI / 2, 0, 0]}
          >
            <group name="Object_20" position={[-7.262, 9.035, -8.16]}>
              <mesh
                name="1"
                castShadow
                receiveShadow
                geometry={nodes["1"].geometry}
                material={materials["Texture-base"]}
              />
            </group>
          </group>
        </group> */}
        <group
          name="Scene"
          position={[-4.794, 0, 0.278]}
          rotation={[-Math.PI / 2, 0, 0]}
        >
          <group
            name="Mill-wind-wheel"
            position={[-35.783, -27.192, 3.888]}
            rotation={[0.445, -0.447, -0.498]}
          >
            <group
              name="Object_11"
              position={[-8.253, 39.884, -25.75]}
              rotation={[-0.607, 0.138, 0.644]}
            >
              <mesh
                name="Mill-wind-wheel_Texture-base_0"
                castShadow
                receiveShadow
                geometry={nodes["Mill-wind-wheel_Texture-base_0"].geometry}
                material={materials["Texture-base"]}
              />
            </group>
          </group>
          <group
            name="Mill-water-wheel"
            position={[3.708, -15.395, -0.444]}
            rotation={[-1.92, 0, 0]}
          >
            <group name="Object_14" position={[-17.708, 31.183, 4.781]}>
              <mesh
                name="Mill-water-wheel_Texture-base_0"
                castShadow
                receiveShadow
                geometry={nodes["Mill-water-wheel_Texture-base_0"].geometry}
                material={materials["Texture-base"]}
              />
            </group>
          </group>
        </group>
        <mesh
          name="Scene_Texture-base_0"
          castShadow
          receiveShadow
          geometry={nodes["Scene_Texture-base_0"].geometry}
          material={materials["Texture-base"]}
          position={[-18.794, 4.337, -15.51]}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <mesh
          name="Scene_Texture-base-gloss-jpg_0"
          castShadow
          receiveShadow
          geometry={nodes["Scene_Texture-base-gloss-jpg_0"].geometry}
          material={materials["Texture-base-gloss-jpg"]}
          position={[-18.794, 4.337, -15.51]}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <mesh
          name="Scene_Book-tittle_0"
          castShadow
          receiveShadow
          geometry={nodes["Scene_Book-tittle_0"].geometry}
          material={materials["Book-tittle"]}
          position={[-18.794, 4.337, -15.51]}
          rotation={[-Math.PI / 2, 0, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/book-transformed.glb");

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 claustre.glb --types --transform --shadows --keepnames --draco . 
Files: claustre.glb [531.61MB] > /Users/Carsten.Hoyer/Workspace/glyptoteket/public/claustre-transformed.glb [17.49MB] (97%)
Author: Giravolt (https://sketchfab.com/giravolt)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/reial-monestir-de-santes-creus-claustre-acf523402f914cee816295078217940c
Title: Reial Monestir de Santes Creus. Claustre.
*/
// @ts-nocheck
import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
    Object_8: THREE.Mesh;
    Object_14: THREE.Mesh;
    Object_20: THREE.Mesh;
  };
  materials: {
    ["BCIN4MHEN-01_1M_4_8k_u1_v1"]: THREE.MeshStandardMaterial;
    ["BCIN4MHEN-01_1M_4_8k_u1_v2"]: THREE.MeshStandardMaterial;
    ["BCIN4MHEN-01_1M_4_8k_u2_v1"]: THREE.MeshStandardMaterial;
    ["BCIN4MHEN-01_1M_4_8k_u2_v2"]: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/claustre-transformed.glb",
    "."
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="Object_2"
        castShadow
        receiveShadow
        geometry={nodes.Object_2.geometry}
        material={materials["BCIN4MHEN-01_1M_4_8k_u1_v1"]}
        rotation={[-Math.PI, 0, 0]}
      />
      <mesh
        name="Object_8"
        castShadow
        receiveShadow
        geometry={nodes.Object_8.geometry}
        material={materials["BCIN4MHEN-01_1M_4_8k_u1_v2"]}
        rotation={[-Math.PI, 0, 0]}
      />
      <mesh
        name="Object_14"
        castShadow
        receiveShadow
        geometry={nodes.Object_14.geometry}
        material={materials["BCIN4MHEN-01_1M_4_8k_u2_v1"]}
        rotation={[-Math.PI, 0, 0]}
      />
      <mesh
        name="Object_20"
        castShadow
        receiveShadow
        geometry={nodes.Object_20.geometry}
        material={materials["BCIN4MHEN-01_1M_4_8k_u2_v2"]}
        rotation={[-Math.PI, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/claustre-transformed.glb");
